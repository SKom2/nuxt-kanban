{"version":3,"file":"index-DDd9UT-4.js","sources":["../../../../stores/TablesStore.js","../../../../components/Tasks.vue","../../../../components/Tasks.vue","../../../../components/Tables.vue","../../../../components/Tables.vue","../../../../components/Main.vue","../../../../pages/index.vue"],"sourcesContent":["import { defineStore } from 'pinia';\r\n\r\nexport const useTablesStore = defineStore('tableStore', {\r\n    state: () => ({\r\n        tables: [\r\n            {\r\n                id: Date.now(),\r\n                name: 'On hold',\r\n                color: 'bg-orange-600',\r\n                isShowingForm: false,\r\n                tasks: []\r\n            },\r\n            {\r\n                id: Date.now(),\r\n                name: 'In progress',\r\n                color: 'bg-blue-800',\r\n                isShowingForm: false,\r\n                tasks: []\r\n            },\r\n            {\r\n                id: Date.now(),\r\n                name: 'Needs review',\r\n                color: \"bg-yellow-600\",\r\n                isShowingForm: false,\r\n                tasks: []\r\n            },\r\n            {\r\n                id: Date.now(),\r\n                name: 'Approved',\r\n                color: 'bg-green-800',\r\n                isShowingForm: false,\r\n                tasks: []\r\n            }\r\n        ]\r\n    }),\r\n    actions: {\r\n        toggleFormState(tableId){\r\n            const table = this.tables.find(table => table.id === tableId)\r\n            if (!table) return;\r\n            if (table.isShowingForm === undefined){\r\n                this.$patch(() => {\r\n                    table.isShowingForm = false;\r\n                })\r\n            } else {\r\n                this.$patch(() => {\r\n                    table.isShowingForm = !table.isShowingForm;\r\n                })\r\n            }\r\n        },\r\n        onSubmit(tableId, task){\r\n            const tableIndex = this.tables.findIndex(table => table.id === tableId)\r\n            if (tableIndex === -1) return;\r\n            this.tables[tableIndex].tasks.push(task)\r\n        },\r\n        onDeleteTask(tableId, taskId) {\r\n            const tableIndex = this.tables.findIndex(table => table.id === tableId);\r\n            if (tableIndex === -1) return;\r\n\r\n            const taskIndex = this.tables[tableIndex].tasks.findIndex(task => task.id === taskId);\r\n            if (taskIndex === -1) return;\r\n\r\n            this.tables[tableIndex].tasks.splice(taskIndex, 1);\r\n        },\r\n        updateTasks(tableId, tasks) {\r\n            const tableIndex = this.tables.findIndex(table => table.id === tableId)\r\n            if (tableIndex === -1) return;\r\n            this.tables[tableIndex].tasks = tasks;\r\n            localStorage.setItem('tables', JSON.stringify(this.tables))\r\n        },\r\n    }\r\n})","<script lang=\"ts\">\r\nimport {defineComponent} from 'vue'\r\nimport {useTablesStore} from \"../stores/TablesStore\";\r\nimport Draggable from 'vuedraggable';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Draggable,\r\n  },\r\n  name: \"Task\",\r\n  props: {\r\n    table: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props){\r\n    const tableStore = useTablesStore()\r\n    const tasks = ref(props.table.tasks)\r\n    const deleteTask = (tableId: String, taskId: String) => {\r\n      console.log(tableStore)\r\n      tableStore.onDeleteTask(tableId, taskId)\r\n      localStorage.setItem('tables', JSON.stringify(tableStore.tables))\r\n    }\r\n\r\n    const onChange = () => {\r\n        tableStore.updateTasks(props.table.id, tasks.value);\r\n    }\r\n\r\n    return {table: props.table, deleteTask, tasks, onChange }\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Draggable\r\n      v-model=\"tasks\"\r\n      group=\"tasks\"\r\n      item-key=\"id\"\r\n      class=\"space-y-2 drag\"\r\n      tag=\"ul\"\r\n      drag-class=\"drag-class\"\r\n      ghost-class=\"ghost-class\"\r\n      @change=\"onChange\"\r\n  >\r\n    <template #item=\"{element}\">\r\n      <li class=\"h-32 bg-[#262626] cursor-pointer p-2 text-white rounded-md hover:bg-[#2F2F2F] transition ease-in-out duration-100\">\r\n        <div class=\"flex justify-between items-start \">\r\n          <span>\r\n            id: {{ element.id }}\r\n          </span>\r\n          <button @click=\"deleteTask(table.id, element.id)\" class=\"p-1 hover:bg-red-500/50 rounded-md transition ease-in-out duration-300\">\r\n            <svg class=\"w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"red\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"mt-3\">{{ element.content }}</div>\r\n      </li>\r\n    </template>\r\n  </Draggable>\r\n</template>\r\n\r\n<style scoped>\r\n.ghost-class{\r\n  background: #474747;\r\n  border-radius: 6px;\r\n}\r\n.ghost-class > div{\r\n  visibility: hidden;\r\n}\r\n</style>","<script lang=\"ts\">\r\nimport {defineComponent} from 'vue'\r\nimport {useTablesStore} from \"../stores/TablesStore\";\r\nimport Draggable from 'vuedraggable';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    Draggable,\r\n  },\r\n  name: \"Task\",\r\n  props: {\r\n    table: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props){\r\n    const tableStore = useTablesStore()\r\n    const tasks = ref(props.table.tasks)\r\n    const deleteTask = (tableId: String, taskId: String) => {\r\n      console.log(tableStore)\r\n      tableStore.onDeleteTask(tableId, taskId)\r\n      localStorage.setItem('tables', JSON.stringify(tableStore.tables))\r\n    }\r\n\r\n    const onChange = () => {\r\n        tableStore.updateTasks(props.table.id, tasks.value);\r\n    }\r\n\r\n    return {table: props.table, deleteTask, tasks, onChange }\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Draggable\r\n      v-model=\"tasks\"\r\n      group=\"tasks\"\r\n      item-key=\"id\"\r\n      class=\"space-y-2 drag\"\r\n      tag=\"ul\"\r\n      drag-class=\"drag-class\"\r\n      ghost-class=\"ghost-class\"\r\n      @change=\"onChange\"\r\n  >\r\n    <template #item=\"{element}\">\r\n      <li class=\"h-32 bg-[#262626] cursor-pointer p-2 text-white rounded-md hover:bg-[#2F2F2F] transition ease-in-out duration-100\">\r\n        <div class=\"flex justify-between items-start \">\r\n          <span>\r\n            id: {{ element.id }}\r\n          </span>\r\n          <button @click=\"deleteTask(table.id, element.id)\" class=\"p-1 hover:bg-red-500/50 rounded-md transition ease-in-out duration-300\">\r\n            <svg class=\"w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"red\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div class=\"mt-3\">{{ element.content }}</div>\r\n      </li>\r\n    </template>\r\n  </Draggable>\r\n</template>\r\n\r\n<style scoped>\r\n.ghost-class{\r\n  background: #474747;\r\n  border-radius: 6px;\r\n}\r\n.ghost-class > div{\r\n  visibility: hidden;\r\n}\r\n</style>","<script lang=\"ts\">\r\nimport {defineComponent, ref, onMounted} from 'vue'\r\nimport Tasks from '../components/Tasks.vue';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {useTablesStore} from \"~/stores/TablesStore\";\r\n\r\nexport default defineComponent({\r\n  name: \"Tables\",\r\n  components: {\r\n    Tasks\r\n  },\r\n  data(){\r\n    return{\r\n      content: 'mario'\r\n    }\r\n  },\r\n  setup(){\r\n\r\n    onMounted(() => {\r\n      const storedTables = localStorage.getItem('tables')\r\n      if (storedTables) {\r\n        tableStore.tables = JSON.parse(storedTables);\r\n      }\r\n    })\r\n\r\n    const tableStore = useTablesStore()\r\n    const textareaNameRef = ref()\r\n\r\n    const showForm = async (tableId: String) => {\r\n      tableStore.toggleFormState(tableId)\r\n      await nextTick()\r\n      textareaNameRef.value[0].focus()\r\n    }\r\n\r\n    const onSubmit = async (tableId: String, content: String) => {\r\n      const table = tableStore.tables.find(table => table.id === tableId)\r\n      if (!table) return;\r\n      const newTask = {\r\n        id: Date.now(),\r\n        content\r\n      }\r\n\r\n      tableStore.onSubmit(tableId, newTask)\r\n      tableStore.toggleFormState(tableId)\r\n      localStorage.setItem('tables', JSON.stringify(tableStore.tables))\r\n    };\r\n\r\n    return {tableStore, textareaNameRef, showForm, onSubmit}\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <article class=\"w-72 flex flex-col rounded-md gap-1\" v-for=\"table in tableStore.tables\" :key=\"table.id\">\r\n    <div :class=\"table.color + ' px-3 py-2 rounded-md'\">\r\n      <h3 class=\"text-sm font-semibold text-white uppercase\">{{ table.name }}({{ table.tasks.length }})</h3>\r\n    </div>\r\n    <Tasks :table=\"table\" />\r\n    <form\r\n        @submit.prevent=\"onSubmit(table.id, textareaNameRef[0].value)\"\r\n        v-if=\"table.isShowingForm\"\r\n        class=\"p-3 bg-[#262626] rounded-md\">\r\n      <textarea\r\n          ref=\"textareaNameRef\"\r\n          v-model=\"content\"\r\n          class=\"block text-white w-full pt-2 pl-2 text-sm rounded-md bg-[#191919] border-gray-300 shadow-sm focus:border-gray-300\"\r\n          rows=\"4\"\r\n          placeholder=\"Enter something...\"\r\n      ></textarea>\r\n      <div class=\"mt-3 flex justify-between\">\r\n        <button\r\n            type=\"submit\"\r\n            class=\"px-4 py-2 text-sm font-medium text-white bg-blue-800 hover:bg-blue-700 rounded-md shadow-sm focus:ring-2 focus:ring-offset-2 transition ease-in-out duration-100\">\r\n          Add Task\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            @click=\" tableStore.toggleFormState(table.id)\"\r\n            class=\"px-4 py-2 text-sm font-medium text-white bg-red-800 hover:bg-red-700 rounded-md shadow-sm focus:ring-2 focus:ring-offset-2 transition ease-in-out duration-100\">\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n    <button\r\n        v-if=\"!table.isShowingForm\"\r\n        @click=\"showForm(table.id)\"\r\n        class=\"text-[#555555] w-full p-2 hover:bg-[#262626] text-left rounded-md transition ease-in-out duration-300 cursor-pointer\">\r\n        <span>\r\n          + Add new Card\r\n        </span>\r\n    </button>\r\n  </article>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","<script lang=\"ts\">\r\nimport {defineComponent, ref, onMounted} from 'vue'\r\nimport Tasks from '../components/Tasks.vue';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {useTablesStore} from \"~/stores/TablesStore\";\r\n\r\nexport default defineComponent({\r\n  name: \"Tables\",\r\n  components: {\r\n    Tasks\r\n  },\r\n  data(){\r\n    return{\r\n      content: 'mario'\r\n    }\r\n  },\r\n  setup(){\r\n\r\n    onMounted(() => {\r\n      const storedTables = localStorage.getItem('tables')\r\n      if (storedTables) {\r\n        tableStore.tables = JSON.parse(storedTables);\r\n      }\r\n    })\r\n\r\n    const tableStore = useTablesStore()\r\n    const textareaNameRef = ref()\r\n\r\n    const showForm = async (tableId: String) => {\r\n      tableStore.toggleFormState(tableId)\r\n      await nextTick()\r\n      textareaNameRef.value[0].focus()\r\n    }\r\n\r\n    const onSubmit = async (tableId: String, content: String) => {\r\n      const table = tableStore.tables.find(table => table.id === tableId)\r\n      if (!table) return;\r\n      const newTask = {\r\n        id: Date.now(),\r\n        content\r\n      }\r\n\r\n      tableStore.onSubmit(tableId, newTask)\r\n      tableStore.toggleFormState(tableId)\r\n      localStorage.setItem('tables', JSON.stringify(tableStore.tables))\r\n    };\r\n\r\n    return {tableStore, textareaNameRef, showForm, onSubmit}\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <article class=\"w-72 flex flex-col rounded-md gap-1\" v-for=\"table in tableStore.tables\" :key=\"table.id\">\r\n    <div :class=\"table.color + ' px-3 py-2 rounded-md'\">\r\n      <h3 class=\"text-sm font-semibold text-white uppercase\">{{ table.name }}({{ table.tasks.length }})</h3>\r\n    </div>\r\n    <Tasks :table=\"table\" />\r\n    <form\r\n        @submit.prevent=\"onSubmit(table.id, textareaNameRef[0].value)\"\r\n        v-if=\"table.isShowingForm\"\r\n        class=\"p-3 bg-[#262626] rounded-md\">\r\n      <textarea\r\n          ref=\"textareaNameRef\"\r\n          v-model=\"content\"\r\n          class=\"block text-white w-full pt-2 pl-2 text-sm rounded-md bg-[#191919] border-gray-300 shadow-sm focus:border-gray-300\"\r\n          rows=\"4\"\r\n          placeholder=\"Enter something...\"\r\n      ></textarea>\r\n      <div class=\"mt-3 flex justify-between\">\r\n        <button\r\n            type=\"submit\"\r\n            class=\"px-4 py-2 text-sm font-medium text-white bg-blue-800 hover:bg-blue-700 rounded-md shadow-sm focus:ring-2 focus:ring-offset-2 transition ease-in-out duration-100\">\r\n          Add Task\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            @click=\" tableStore.toggleFormState(table.id)\"\r\n            class=\"px-4 py-2 text-sm font-medium text-white bg-red-800 hover:bg-red-700 rounded-md shadow-sm focus:ring-2 focus:ring-offset-2 transition ease-in-out duration-100\">\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n    <button\r\n        v-if=\"!table.isShowingForm\"\r\n        @click=\"showForm(table.id)\"\r\n        class=\"text-[#555555] w-full p-2 hover:bg-[#262626] text-left rounded-md transition ease-in-out duration-300 cursor-pointer\">\r\n        <span>\r\n          + Add new Card\r\n        </span>\r\n    </button>\r\n  </article>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","<script>\r\nimport { ref, defineComponent } from 'vue';\r\nimport Table from './Tables.vue';\r\n\r\nexport default defineComponent({\r\n  name: \"Main\",\r\n  components: {\r\n    Table\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <main class=\"flex-1\">\r\n    <div class=\"flex flex-col h-full overflow-x-scroll\">\r\n      <div class=\"flex-1 px-4 mx-auto my-14\">\r\n        <div class=\"inline-flex h-full gap-2\">\r\n          <Table />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>","<script>\r\nimport Main from '../components/Main.vue'\r\nexport default {\r\n  middleware: 'auth',\r\n  components: {\r\n    Main,\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <Main />\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>"],"names":["table","_resolveComponent","_ssrRenderComponent","_mergeProps","onChange","_withCtx","_push","_parent","_ssrInterpolate","_createVNode","deleteTask","_toDisplayString","_openBlock","_createBlock","Tasks","__nuxt_component_0","_ssrRenderList","_ssrRenderClass","_sfc_main","_ssrRenderAttrs","Main"],"mappings":"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"}