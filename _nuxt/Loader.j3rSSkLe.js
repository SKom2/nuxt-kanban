import{bH as a}from"./entry.BPsU09f9.js";const n=a("auth",{state:()=>({isAuthenticated:!1,accessToken:"",refreshToken:"",errorMessage:""}),actions:{setAuthentication(e){this.isAuthenticated=e},setAccessToken(e){localStorage.setItem("accessToken",JSON.stringify(e))},setRefreshToken(e){localStorage.setItem("refreshToken",JSON.stringify(e))},setError(e){this.errorMessage=e},async authenticateUser(e,o){try{const t=await fetch("https://trello.backend.tests.nekidaem.ru/api/v1/users/token/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:o})});if(t.ok){const s=await t.json();return this.setAccessToken(s.access),this.setRefreshToken(s.refresh),this.setAuthentication(!0),!0}else{const s=await t.json();return s.password?this.setError(s.password[0]):s.username?this.setError(s.username[0]):s.detail&&this.setError("Неправильное Имя аккаунта или Пароль"),!1}}catch(t){console.error("Authentication error:",t)}},async createUser(e,o,t){try{const s=await fetch("https://trello.backend.tests.nekidaem.ru/api/v1/users/create/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,email:o,password:t})});if(s.ok)return!0;{const r=await s.json();return r.password?this.setError(r.password[0]):r.email?this.setError(r.email[0]):r.username&&this.setError(r.username[0]),!1}}catch(s){return this.setError("Сетевая ошибка при попытке регистрации"),console.error("Registration error:",s),!1}},logout(){localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken"),this.setAuthentication(!1)}}}),c=a("loader",{state:()=>({isLoading:!1}),actions:{toggleIsLoading(e){this.isLoading=e}}});export{c as a,n as u};
